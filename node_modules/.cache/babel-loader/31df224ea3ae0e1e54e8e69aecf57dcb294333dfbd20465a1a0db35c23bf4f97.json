{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\assignment_zepto_apps\\\\src\\\\Components\\\\BookList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCard from './BookCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [genreFilter, setGenreFilter] = useState('');\n  const [allGenre, setAllGenre] = useState([]);\n  const genreArray = [];\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const response = await axios.get(`https://gutendex.com/books?page=${page}`);\n      console.log(response.data.results);\n      setBooks(response.data.results);\n    };\n    fetchBooks();\n  }, [page]);\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n  const handleGenreChange = event => {\n    console.log(event.target.value);\n    setGenreFilter(event.target.value);\n  };\n\n  // Filter the books based on search and genre\n  const filteredBooks = books.filter(book => book.title.toLowerCase().includes(search.toLowerCase()) && (!genreFilter || book.subjects.includes(genreFilter)));\n  let gen = [];\n  let option = \"\";\n  option = books.map((book, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: book.bookshelves.map((bookshelve, i) => {\n      gen.push(bookshelve);\n    })\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this));\n  const filterGenre = gen.filter((item, index) => gen.indexOf(item) === index);\n  console.log(filterGenre);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booklist_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title...\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: genreFilter,\n        onChange: handleGenreChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Science fiction\",\n          children: \"Science fiction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), filterGenre.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-list\",\n      children: filteredBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => Math.max(prev - 1, 1)),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => prev + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(BookList, \"TW4DMiWrFcleYtqJbwRH0/xSxQ0=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","axios","BookCard","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","page","setPage","search","setSearch","genreFilter","setGenreFilter","allGenre","setAllGenre","genreArray","fetchBooks","response","get","console","log","data","results","handleSearch","event","target","value","handleGenreChange","filteredBooks","filter","book","title","toLowerCase","includes","subjects","gen","option","map","index","children","bookshelves","bookshelve","i","push","fileName","_jsxFileName","lineNumber","columnNumber","filterGenre","item","indexOf","className","type","placeholder","onChange","id","onClick","prev","Math","max","_c","$RefreshReg$"],"sources":["D:/Learning/assignment_zepto_apps/src/Components/BookList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BookCard from './BookCard';\r\n\r\nconst BookList = () => {\r\n    const [books, setBooks] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [search, setSearch] = useState('');\r\n    const [genreFilter, setGenreFilter] = useState('');\r\n    const [allGenre, setAllGenre] = useState([]);\r\n    const genreArray = [];\r\n\r\n    useEffect(() => {\r\n        const fetchBooks = async () => {\r\n            const response = await axios.get(`https://gutendex.com/books?page=${page}`);\r\n            console.log(response.data.results);\r\n\r\n            setBooks(response.data.results);\r\n        };\r\n        fetchBooks();\r\n    }, [page]);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleGenreChange = (event) => {\r\n        console.log(event.target.value);\r\n\r\n        setGenreFilter(event.target.value);\r\n    };\r\n\r\n    // Filter the books based on search and genre\r\n    const filteredBooks = books.filter(book =>\r\n        book.title.toLowerCase().includes(search.toLowerCase()) &&\r\n        (!genreFilter || book.subjects.includes(genreFilter))\r\n    );\r\n    let gen = [];\r\n    let option = \"\";\r\n    option = books.map((book, index) => (\r\n        <div key={index}>\r\n            {book.bookshelves.map((bookshelve, i) => {\r\n                gen.push(bookshelve)\r\n            }\r\n\r\n            )}\r\n\r\n        </div>\r\n    ))\r\n\r\n    const filterGenre = gen.filter((item, index) => gen.indexOf(item) === index)\r\n    console.log(filterGenre);\r\n\r\n\r\n\r\n    return (\r\n        <div className='booklist_page'>\r\n            <div className='search_filter'>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title...\"\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n                <select value={genreFilter} onChange={handleGenreChange}>\r\n                    <option value=\"\">All Genres</option>\r\n                    <option value=\"Science fiction\">Science fiction</option>\r\n                    {filterGenre.map(item => (\r\n                        <option key={item} value={item}>{item}</option>\r\n                    ))}\r\n                    {/* Add genre options dynamically */}\r\n                </select>\r\n\r\n            </div>\r\n            <div className=\"book-list\">\r\n                {filteredBooks.map(book => (\r\n                    <BookCard key={book.id} book={book} />\r\n                ))}\r\n            </div>\r\n            <div className=\"pagination\">\r\n                <button onClick={() => setPage(prev => Math.max(prev - 1, 1))}>Previous</button>\r\n                <button onClick={() => setPage(prev => prev + 1)}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}